package com.onewelcome.core

import android.os.Build
import com.onegini.mobile.sdk.android.model.OneginiClientConfigModel
import com.onewelcome.showcaseapp.R
import javax.inject.Inject

class OneginiConfigModel @Inject constructor() : OneginiClientConfigModel {
  /* Config model generated by SDK Configurator version: v6.0.1 */
  override val appIdentifier = "ExampleApp"
  override val appPlatform = "android"
  override val redirectUri = "oneginiexample://loginsuccess"
  override val appVersion = "7.10.0"
  override val baseUrl = "https://mobile-security-proxy.onegini.com"
  override val resourceBaseUrl = "https://mobile-security-proxy.onegini.com/resources/"
  override val keyStoreHash = "f357773b2a29683017705ee13f9ec147e504d6a413ae8294f4ae55e293ad9831"
  override val serverPublicKey: String? = null
  override val serverType = "access"
  override val serverVersion = "1.63.1"
  override val certificatePinningKeyStore = R.raw.keystore
  override val deviceName = "${Build.BRAND} ${Build.MODEL}"

  override fun toString(): String {
    return "ConfigModel{" +
        "  appIdentifier='" + appIdentifier + "'" +
        ", appPlatform='" + appPlatform + "'" +
        ", redirectUri='" + redirectUri + "'" +
        ", appVersion='" + appVersion + "'" +
        ", baseUrl='" + baseUrl + "'" +
        ", resourceBaseUrl='" + resourceBaseUrl + "'" +
        ", keyStoreHash='" + keyStoreHash + "'" +
        ", serverPublicKey='" + serverPublicKey + "'" +
        ", serverType='" + serverType + "'" +
        ", serverVersion='" + serverVersion + "'" +
        "}"
  }
}
